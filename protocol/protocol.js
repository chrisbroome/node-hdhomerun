const {
  HDHOMERUN_DISCOVER_UDP_PORT,
  HDHOMERUN_CONTROL_TCP_PORT,
  HDHOMERUN_MAX_PACKET_SIZE,
  HDHOMERUN_MAX_PAYLOAD_SIZE,
  HDHOMERUN_TYPE_DISCOVER_REQ,
  HDHOMERUN_TYPE_DISCOVER_RPY,
  HDHOMERUN_TYPE_GETSET_REQ,
  HDHOMERUN_TYPE_GETSET_RPY,
  HDHOMERUN_TYPE_UPGRADE_REQ,
  HDHOMERUN_TYPE_UPGRADE_RPY,
  HDHOMERUN_TAG_DEVICE_TYPE,
  HDHOMERUN_TAG_DEVICE_ID,
  HDHOMERUN_TAG_GETSET_NAME,
  HDHOMERUN_TAG_GETSET_VALUE,
  HDHOMERUN_TAG_GETSET_LOCKKEY,
  HDHOMERUN_TAG_ERROR_MESSAGE,
  HDHOMERUN_TAG_TUNER_COUNT,
  HDHOMERUN_TAG_LINEUP_URL,
  HDHOMERUN_TAG_DEVICE_AUTH_BIN,
  HDHOMERUN_TAG_BASE_URL,
  HDHOMERUN_TAG_DEVICE_AUTH_STR,
  HDHOMERUN_DEVICE_TYPE_WILDCARD,
  HDHOMERUN_DEVICE_TYPE_TUNER,
  HDHOMERUN_DEVICE_TYPE_STORAGE,
  HDHOMERUN_DEVICE_ID_WILDCARD,
  HDHOMERUN_MIN_PEEK_LENGTH,
} = require('./packet');

module.exports = {
  types: {
    disc_req: HDHOMERUN_TYPE_DISCOVER_REQ,
    disc_rpy: HDHOMERUN_TYPE_DISCOVER_RPY,
    getset_req: HDHOMERUN_TYPE_GETSET_REQ,
    getset_rpy: HDHOMERUN_TYPE_GETSET_RPY,
  },
  tags: {
    device_type: {value: HDHOMERUN_TAG_DEVICE_TYPE, size: 4},
    device_id: {value: HDHOMERUN_TAG_DEVICE_ID, size: 4},
    getset_name: {value: HDHOMERUN_TAG_GETSET_NAME, size: undefined},
    getset_value: {value: HDHOMERUN_TAG_GETSET_VALUE, size: undefined},
    getset_lockkey: {value: HDHOMERUN_TAG_GETSET_LOCKKEY, size: 4},
    error_message: {value: HDHOMERUN_TAG_ERROR_MESSAGE, size: undefined},
    lineup_url: {value: HDHOMERUN_TAG_LINEUP_URL, size: undefined},
    tuner_count: {value: HDHOMERUN_TAG_TUNER_COUNT, size: 1},
    auth_bin: {value: HDHOMERUN_TAG_DEVICE_AUTH_BIN, size: 18},
    auth_str: {value: HDHOMERUN_TAG_DEVICE_AUTH_STR, size: undefined},
    base_url: {value: HDHOMERUN_TAG_BASE_URL, size: undefined},
  },
  dev_values: {
    device_type_tuner: HDHOMERUN_DEVICE_TYPE_TUNER,
    device_type_any: HDHOMERUN_DEVICE_TYPE_WILDCARD,
    device_id_any: HDHOMERUN_DEVICE_ID_WILDCARD,
  },
  HEADER_LEN: 4,
  MAX_BUFSIZE: 3072,
};
